# yaml-language-server: $schema=https://raw.githubusercontent.com/BenjaminGuzman/microstart/main/src/main/resources/schema.json
services:
  - name: Docker daemon
    start: sudo --stdin systemctl start docker; sudo --stdin systemctl status docker # run microstart with sudo or this will break (but see comment below)
    color: 0x00ff00
    startedPatterns:
      - "active \\(running\\)" # microstart searches for REGEXes, not string. Thus, we need to escape the parenthesis
    stdin: sudo-password.txt # to avoid having your password in a plain text file, simply run "sudo echo" or something to store the password in cache
    aliases:
      - systemctl-docker
      - systemd-docker
    errorPatterns:
      - Error response from daemon

  - name: PostgreSQL
    start: sudo --stdin docker compose -f docker-compose-psql.yml up --remove-orphans # run microstart with sudo or this will break (but see comment below)
    stop: sudo --stdin docker compose -f docker-compose-psql.yml down
    stopStdin: sudo-password.txt
    aliases:
      - psql
      - postgres
    color: 0x00ff00
    startedPatterns:
      - database system is ready to accept connections
      - Attaching to webmock-.*
    stdin: sudo-password.txt # to avoid having your password in a plain text file, simply run "sudo echo" or something to store the password in cache
    errorPatterns:
      - Error response from daemon
      - has no container to start

  - name: MongoDB
    start: sudo --stdin docker compose -f docker-compose-mongo.yml up --remove-orphans
    stop: sudo --stdin docker compose -f docker-compose-mongo.yml down
    stopStdin: sudo-password.txt
    aliases:
      - mongo
    color: 0x00ff00
    startedPatterns:
      - Waiting for connections
      - Attaching to webmock-.*
    stdin: sudo-password.txt
    errorPatterns:
      - Error response from daemon
      - has no container to start

  - name: Users
    start: cd backend/users && npm run start:dev
    aliases:
      - users
    color: 0xff00ff
    startedPatterns:
      - Nest application successfully started
    errorPatterns:
      - "Error:"

  - name: Content
    aliases:
      - content
    start: cd backend/content && npm run start:dev
    color: 0x00ff0f
    startedPatterns:
      - Nest application successfully started
    errorPatterns:
      - "Error:"

  - name: Cart
    aliases:
      - cart
      - shopping-cart
    start: cd backend/cart && npm run start:dev
    color: 0x00ff0f
    startedPatterns:
      - Nest application successfully started
    errorPatterns:
      - "Error:"

  - name: Auth
    aliases:
      - auth
    start: cd backend/auth && ./auth
    color: 0x00fff0
    startedPatterns:
      - server is listening

  - name: Captcha
    aliases:
      - captcha
    start: cd backend/captcha && ./captcha
    color: 0x00f0f0
    startedPatterns:
      - server is listening

  - name: Frontend
    aliases:
      - frontend
    start: cd frontend && npm run start
    color: 0xf0f0f0
    startedPatterns:
      - Angular Live Development Server is listening

  # backend configuration with no watch mode (no dev mode)
  # useful to save resources in case you only work on frontend
  - name: Users no watch
    start: cd backend/users && npm run start
    aliases:
      - users-no-watch
    color: 0xff00ff
    startedPatterns:
      - Nest application successfully started
    errorPatterns:
      - "Error:"

  - name: Content no watch
    aliases:
      - content-no-watch
    start: cd backend/content && npm run start
    color: 0x00ff0f
    startedPatterns:
      - Nest application successfully started
    errorPatterns:
      - "Error:"

  - name: Cart no watch
    aliases:
      - cart-no-watch
      - shopping-cart-no-watch
    start: cd backend/cart && npm run start
    color: 0x00ff0f
    startedPatterns:
      - Nest application successfully started
    errorPatterns:
      - "Error:"

groups:
  - name: Frontend group
    aliases:
      - frontend
    services:
      - frontend
    dependencies:
      - backend

  - name: Backend group
    aliases:
      - backend
    services:
      - content
      - users
      - auth
      - cart
      - captcha
    dependencies:
      - database

  - name: Database group
    aliases:
      - database
      - databases
      - db
      - dbs
    services:
      - postgres
      - mongo
    dependencies:
      - systemd-docker

  - name: Systemd docker
    aliases:
      - systemd-docker
    services:
      - Docker daemon

  - name: Frontend minimal
    aliases:
      - frontend-minimal
    services:
      - frontend
    dependencies:
      - backend-no-watch
  
  - name: Frontend captcha
    aliases:
      - frontend-captcha
    services:
      - frontend
      - captcha

  - name: Backend group without watch
    aliases:
      - backend-no-watch
    services:
      - content-no-watch
      - users-no-watch
      - auth
      - captcha
      - cart-no-watch
    dependencies:
      - database
